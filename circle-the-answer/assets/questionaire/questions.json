{
  "questions": [
    {
      "category": "beginner",
      "items": [
        {
          "question": "What is the process of inserting an element in a stack?",
          "choices": [
            "Create",
            "Push",
            "Evaluation",
            "Pop"
          ],
          "answer": "Push",
          "explanation": "The Push operation allows users to insert elements in the stack. If the stack is filled completely and trying to perform push operation stack–overflow can happen."
        },
        {
          "question": "What is the process of removing an element from stack?",
          "choices": [
            "Create",
            "Push",
            "Evaluation",
            "Pop"
          ],
          "answer": "Pop",
          "explanation": "Elements in the stack are removed using pop operation. Pop operation removes the topmost element in the stack i.e., last entered element"
        },
        {
          "question": "Complete the sentence by ENCIRCLING the missing word.      A stack is a linear data structure in which the insertion of a new element and removal of an existing element takes place at the same end represented as the _______ of the stack.",
          "choices": [
            "Element",
            "Top",
            "Array",
            "List"
          ],
          "answer": "Top",
          "explanation": "There are many real-life examples of a stack. Consider the simple example of plates stacked over one another in a canteen. The plate which is at the top is the first one to be removed, i.e., the plate which has been placed at the bottommost position remains in the stack for the longest period. So, it can be simply seen to follow the LIFO/FILO order."
        },
        {
          "question": "TRUE or FALSE. Each item in an array is indexed starting with 1.",
          "choices": [
            "TRUE",
            "FALSE"
          ],
          "answer":"FALSE",
          "explanation": "An array arr[i] is interpreted as *(arr+i). Here, array denotes the address of the first array element or the 0-index element. So *(arr+i) means the element at i distance from the first element of the array. So, array index starts from 0 as initially i is 0 which means the first element of the array."
        },
        {
          "question": "Elements are items stored in an array and can be accessed by their index.",
          "choices": [
            "Index",
            "Matrix",
            "Length",
            "Element"
          ],
          "answer": "Element",
          "explanation": "Each item in an array is called an element, and each element is accessed by its numerical index."
        },
        {
          "question": "Maintaining the order of elements in the array.",
          "choices": [
            "Sequence",
            "Traversal",
            "Sorting",
            "Searching"
          ],
          "answer": "Sorting",
          "explanation": "Sorting an array means to arrange the elements in the array in a certain order."
        },
        {
          "question": "The length of an array is determined by the number of elements it can contain.",
          "choices": [
            "Index",
            "Matrix",
            "Length",
            "Element"
          ],
          "answer": "Length",
          "explanation": "Array.Length Property is used to get the total number of elements in all the dimensions of the Array. Basically, the length of an array is the total number of the elements which is contained by all the dimensions of that array."
        },
        {
          "question": "Which of the following is not an example of Array operations?",
          "choices": [
            "Insertion",
            "Selection",
            "Deletion",
            "Traversal"
          ],
          "answer": "Selection",
          "explanation": "Following are the basic operations supported by an array: Traverse, Insertion, Deletion, Search, Update. Selection sort is an in-place comparison sorting algorithm."
        },
        {
          "question": "TRUE or FALSE. Bit fields and Bit arrays are same.",
          "choices": [
            "TRUE",
            "FALSE"
          ],
          "answer": "FALSE",
          "explanation": "Bit field contains the number of adjacent computer locations used to store the sequence of bits to address a bit or groups of bits. Bit array is an array that stores combinations of bit 0 and bit 1. Thus, bit fields and Bit arrays are different."
        },
        {
          "question": "How will you implement dynamic arrays in Java?",
          "choices": [
            "Set",
            "Map",
            "HashMap",
            "List"
          ],
          "answer": "List",
          "explanation": "ArrayList is used to implement dynamic arrays in Java."
        }
      ]
    },
    {
      "category": "intermediate",
      "items":[
        {
          "question": "In a stack, if a user tries to remove an element from an empty stack it is called?",
          "choices": [
            "Underflow",
            "Empty collection",
            "Overflow",
            "Garbage Collection"
          ],
          "answer": "Underflow",
          "explanation": "Underflow occurs when the user performs a pop operation on an empty stack. Overflow occurs when the stack is full, and the user performs a push operation. Garbage Collection is used to recover the memory occupied by objects that are no longer used."
        },
        {
          "question": "Pushing an element into stack already having five elements and stack size of 5, then stack becomes",
          "choices": [
            "Overflow",
            "Crash",
            "Underflow",
            "User flow"
          ],
          "answer": "Overflow",
          "explanation": "The stack is filled with 5 elements and pushing one more element causes a stack overflow. This results in overwriting memory, code and loss of unsaved work on the computer."
        },
        {
          "question": "Elements in an array are accessed ________?",
          "choices": [
            "randomly",
            "sequentially",
            "exponentially",
            "logarithmically"
          ],
          "answer": "Randomly",
          "explanation":"Elements in an array are accessed randomly. In Linked lists, elements are accessed sequentially."
        },
        {
          "question": "Which data structure is used for implementing recursion?",
          "choices": [
            "Queue",
            "Stack",
            "Array",
            "List"
          ],
          "answer": "Stack",
          "explanation":"Stacks are used for the implementation of Recursion."
        },
        {
          "question": "The data structure required to check whether an expression contains a balanced parenthesis is?",
          "choices":[
            "Stack",
            "Queue",
            "Array",
            "Tree"
          ],
          "answer": "Stack",
          "explanation": "The stack is a simple data structure in which elements are added and removed based on the LIFO principle. Open parenthesis is pushed into the stack and a closed parenthesis pops out elements till the top element of the stack is its corresponding open parenthesis. If the stack is empty, parenthesis is balanced otherwise it is unbalanced."
        },
        {
          "question": "The process of accessing data stored in a serial access memory is like manipulating data on a ________",
          "choices": [
            "Heap",
            "Binary Tree",
            "Array",
            "Stack"
          ],
          "answer": "Stack",
          "explanation": "In serial access memory data records are stored one after the other in which they are created and are accessed sequentially. In stack data structure, elements are accessed sequentially. Stack data structure resembles the serial access memory."
        },
        {
          "question": "Which data structure is needed to convert infix notation to postfix notation?",
          "choices": [
            "Branch",
            "Tree",
            "Queue",
            "Stack"
          ],
          "answer": "Stack",
          "explanation": "The Stack data structure is used to convert infix expression to postfix expression. The purpose of stack is to reverse the order of the operators in the expression. It also serves as a storage structure, as no operator can be printed until both of its operands have appeared."
        },
        {
          "question": "Circular Queue is also known as ________",
          "choices":[
            "Ring Buffer",
            "Square Buffer",
            "Rectangle Buffer",
            "Curve Buffer"
          ],
          "answer": "Ring Buffer",
          "explanation": "Circular Queue is also called as Ring Buffer. Circular Queue is a linear data structure in which last position is connected back to the first position to make a circle. It forms a ring structure."
        },
        {
          "question": "TRUE or FALSE. Dynamic arrays overcome the limit of static arrays.",
          "choices": [
            "TRUE",
            "FALSE"
          ],
          "answer": "TRUE",
          "explanation": "Static arrays have fixed capacity. The capacity must be specified during memory allocation. Dynamic arrays don’t require to specify their capacity during memory allocation. Dynamic arrays have fixed physical size at backend and its capacity increases if required. Thus, Dynamic arrays overcome the limit of static arrays."
        },
        {
          "question": "TRUE or FALSE. Both Dynamic array and Dynamically memory allocated array are same.",
          "choices": [
            "TRUE",
            "FALSE"
          ],
          "answer": "FALSE",
          "explanation": "Physical size of a Dynamic array is fixed with a larger value. Dynamically memory allocated arrays are arraying whose memory is allocated at run time rather than at compile time. Dynamically memory allocated arrays don’t have physical size at the backend. Thus, Dynamic arrays and Dynamically memory allocated arrays are different."
        }

      ]
    },
    {
      "category": "advanced",
      "items":[
        {
          "question": "In Linked List implementation, a node carries information regarding ________",
          "choices": [
            "Link",
            "Data",
            "Node",
            "Both Link and Data"
          ],
          "answer": "Both Link and Data",
          "explanation": "A linked list is a collection of objects linked together by references from an object to another object. By convention these objects are names as nodes. Linked list consists of nodes where each node contains one or more data fields and a reference(link) to the next node."
        },
        {
          "question": "Which of the following is not the type of queue?",
          "choices": [
            "Ordinary",
            "Single",
            "Circular",
            "Priority"
          ],
          "answer": "Single",
          "explanation": "Queue always has two ends. So, single ended queue is not the type of queue."
        },
        {
          "question": "A fi list of elements in which deletion can be done from one end (front) and insertion can take place only at the other end (rear) is known as",
          "choices": [
            "Queue",
            "Stack",
            "Tree",
            "List"
          ],
          "answer": "Queue",
          "explanation": "Linear list of elements in which deletion is done at front side and insertion at rear side is called Queue. In stack we will delete the last entered element first."
        },
        {
          "question": "The data structure required for Breadth First Traversal on a graph is.",
          "choices": [
            "Stack",
            "Array",
            "Queue",
            "Tree"
          ],
          "answer": "Queue",
          "explanation": "In Breadth First Search Traversal, BFS, starting vertex is first taken and adjacent vertices which are unvisited are also taken. Again, the first vertex which was added as an unvisited adjacent vertex list will be considered to add further unvisited vertices of the graph. To get the first unvisited vertex we need to follow First in First Out principle. Queue uses FIFO principle."
        },
        {
          "question": "A queue follows. ",
          "choices": [
            "LIFO",
            "FIFO",
            "FILO",
            "LILO"
          ],
          "answer": "FIFO",
          "explanation": "Element first added in queue will be deleted first which is FIFO principle."
        },
        {
          "question": "A data structure in which elements can be inserted or deleted at/from both ends but not in the middle is?",
          "choices": [
            "Queue",
            "Circular",
            "Dequeue",
            "Priority"
          ],
          "answer": "Dequeue",
          "explanation": "In dequeuer, we can insert or delete elements from both the ends. In queue, we will follow first in first out principle for insertion and deletion of elements. Element with least priority will be deleted in a priority queue."
        },
        {
          "question": "To search for an element in a sorted array, which searching technique can be used?",
          "choices": [
            "Linear",
            "Jump",
            "Binary",
            "Fibonacci"
          ],
          "answer": "Binary",
          "explanation": "Since the array is sorted, binary search is preferred as its time complexity is O(logn)."
        },
        {
          "question": "Given only a single array of size 10 and no other memory is available. Which of the following operation is not feasible to implement (Given only push and pop operation)?",
          "choices": [
            "Push",
            "Pop",
            "Enqueue",
            "Returntop"
          ],
          "answer": "Enqueue",
          "explanation": "To perform Enqueue using just push and pop operations, there is a need of another array of same size. But as there is no extra available memory, the given operation is not feasible."
        },
        {
          "question": "TRUE or FALSE. Heap exhibits the property of a binary tree.",
          "choices": [
            "TRUE",
            "FALSE"
          ],
          "answer": "TRUE",
          "explanation": "Yes, because the leaf nodes are present at height h or h-1, which is a property of complete binary tree."
        },
        {
          "question": "TRUE or FALSE. Double hashing is one of the best methods available for open addressing.",
          "choices": [
            "TRUE",
            "FALSE"
          ],
          "answer": "TRUE",
          "explanation": "Double hashing is one of the best methods for open addressing because the permutations produced have many characteristics of randomly chosen permutations."
        }

      ]
    }
  ]
}
